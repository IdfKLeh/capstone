핵심으로 끌고갈 다른점 예시:

신화를 활용한 특색있는 설정
마우스로만으로도 플레이 할 수 있어 어려운 컨트롤에 자신이 없는 사람도 할 수 있는 게임


소프트웨어공학 넣기 test driven development이 제일 만만 
requirement specification도 좋음
software process


졸업 작품으로써의 가치
software 공학을 삽입하는 과정에서 requirements specification을 통해서 초기 개발 과정에선 체계가 잡혀있는데, 후반에 그것이 단순한 방식으로 변함
- 이것을 TDD등의 결과물에 대한 체계성 확보로 해결했으면 좋겠다.

추가적 목표 가치
그리스로마신화를 반영했을때, 기존의 그리스로마신화를 반영한 게임들과 비교했을때 좋았던점과 아쉬웠던점 분석
- 본인의 게임에 삽입된 방식 등을 고려해서 설명하면 좋은 셀링 포인트가 된다


11.01
1. TDD 제대로 알고 적용하기(밸런싱은 그게 아님... 제대로 공부하자) 
2. 특징 살리기에 있어서 그리스 로마신화의 비교라는 시나리오 측면에서 지적할 거라면, 공신력있는 문헌 사용(논문, 기사 등의 참고문헌)



11/15 말할 것
TDD 작성 중. 유니티에서 활용할 수 있는 Test 툴, Nunit의 unity test framework를 사용하여 Test 케이스들을 작성하고, 현재 작성된 코드들이 그것을 통과하는 것을 보여줄 것 같다
시간이 남는다면 특징 살리기도 작성할 건데, 아마 이것은 시나리오 측면에서의 강조와 더불어 게임 플레이의 방식이 타 게임들의 어떤 장점들을 끌고 왔는지를 보여줄 것 같다.

11/15일 질문 해야할 것
1. TDD 증거를 작성 중인데 테스트 케이스를 대략 몇개 정도 만들어야 하나?
2. 그러면 이것을 발전 과정을 보여주기 위해 작성된 코드의 열화판 등을 만들어서 그것에 대한 테스트 제작, 스크린 샷등으로 기록을 남겨서 제출하는 것이 좋나?

requirement specification 으로 설계된 것을 보여줄 것 어떤 동작 들어갔는지
개발 과정: TDD를 보여주기 왜썼는지 어떤 장점이 있었는지 개발 과정이 단축되었다는 장점등 제시
그다음 마지막으로 시연


11/28일이라 공지 나갔는데 12/04까지 였음 데드라인은
제출해야 할 것: 완성품, 최종보고서(여기 두개는 그때까지 이메일로 교수님과 minacha@seoultech.ac.kr 참조로 보내기), 정리된 소스코드?(이거를 정확히 어떻게 해야하지?)


TDD 존나 애매함. 수정해야함. 단계적으로 개발이 이루어졌고, 각 단계별 Test가 존재하고, 그것을 반영해서 블럭바이블럭으로 개발이 완성되었다는 Documentation이 필요하다.


질문드릴 것:
TDD 충분한가. r각 테스트 단위별 제목을 따로 정해야할까? 여전히 11/29일로 학과 홈페이지 공지사항이 되어있던데 12/04일이 데드라인이 맞나. 정리된 소스코드는 정확히 어떻게 제출해야 하나. TDD의 장점이 근본적인 것 밖에 생각나지 않는데 실재적인 측면에서도 장점의 부각이 필요한가.


시간적인 배열이 필요하다. 시간순서에 맞도록 블럭바이블럭으로 추가 테스트과정을 반영해서 작성할 것.